{"version":3,"sources":["Alert.js","NumberOfEvents.js","CitySearch.js","Event.js","EventList.js","DataVisualization.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Alert","props","getStyle","color","className","style","this","text","Component","InfoAlert","WarningAlert","ErrorAlert","NumberOfEvents","state","numberOfEvents","errorText","handleChange","event","value","target","setState","throttleHandleChange","debounce","bind","updateEvents","type","onChange","CitySearch","query","suggestions","showSuggestions","locations","infoText","handleItemClicked","suggestion","filter","location","toUpperCase","indexOf","length","onFocus","display","map","id","onClick","Event","isExpanded","handleExpandEvent","renderExpandedComponent","href","htmlLink","rel","description","renderButtonText","renderTime","time","start","dateTime","formattedTime","moment","toDate","summary","EventList","events","DataVisualization","data","ResponsiveContainer","height","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","dataKey","name","YAxis","allowDecimals","Tooltip","cursor","strokeDasharray","Scatter","fill","mockData","kind","etag","status","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","getEvents","a","NProgress","window","startsWith","done","extractLocations","navigator","onLine","localStorage","getItem","JSON","parse","getAccessToken","token","removeQuery","url","axios","get","result","setItem","stringify","Set","accessToken","checkToken","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","fetch","then","res","json","catch","error","encodeCode","encodeURIComponent","access_token","history","pushState","pathname","newurl","protocol","host","App","currentLocation","warningText","eventCount","response","slice","locationEvents","numEvents","mounted","getData","number","city","split","shift","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","atatus","install","URL","process","origin","addEventListener","headers","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6ffb6cd4.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  };\n\n  render() {\n    return (\n      <div className='Alert'>\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#323edd';\n  }\n}\n\nclass WarningAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#FFA500';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#ec0101';\n  }\n}\n\nexport { InfoAlert, WarningAlert, ErrorAlert };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { debounce } from 'lodash';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n  // For debounce function\n  constructor() {\n    super();\n    this.throttleHandleChange = debounce(\n      this.throttleHandleChange.bind(this),\n      1500\n    );\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  state = {\n    numberOfEvents: '10',\n    errorText: '',\n  };\n\n  throttleHandleChange(value) {\n    this.props.updateEvents(null, value);\n  }\n\n  // When user changes number value\n  handleChange = (event) => {\n    const value = event.target.value;\n\n    if (value < 0) {\n      this.setState({\n        errorText: 'Please enter a positive number of events',\n      });\n    } else if (value < 1) {\n      this.setState({\n        numberOfEvents: value,\n        errorText: 'Please specify at least 1 event to be displayed',\n      });\n    } else {\n      this.setState({ errorText: '', numberOfEvents: value });\n      this.throttleHandleChange(value);\n    }\n  };\n\n  render() {\n    const { numberOfEvents, errorText } = this.state;\n    return (\n      <div className='NumberOfEvents'>\n        <label>Number of events</label>\n        <input\n          type='number'\n          className='number'\n          value={numberOfEvents}\n          onChange={this.handleChange}\n        />\n        <ErrorAlert text={errorText} />\n      </div>\n    );\n  }\n}\n\nNumberOfEvents.propTypes = {\n  numberOfEvents: PropTypes.string,\n  updateEvents: PropTypes.func,\n};\n\nexport default NumberOfEvents;\n","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\nimport PropTypes from 'prop-types';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: false,\n    locations: this.props.locations,\n    infoText: '',\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      suggestions: [],\n      showSuggestions: false,\n    });\n    this.props.updateEvents(suggestion);\n  };\n\n  // Displays suggestions based on user input (autocomplete feature)\n  handleChange = (event) => {\n    const value = event.target.value;\n    this.setState({ showSuggestions: true });\n\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: `Sorry, we could not find \"${value}\". Please try another city`,\n        showSuggestions: false,\n      });\n    } else {\n      this.setState({\n        infoText: '',\n        query: value,\n        suggestions,\n      });\n    }\n  };\n\n  render() {\n    const { query, suggestions, showSuggestions, infoText } = this.state;\n\n    return (\n      <div className='CitySearch'>\n        <label>Choose your nearest city</label>\n        <input\n          type='text'\n          className='city'\n          value={query}\n          onChange={this.handleChange}\n          onFocus={() => {\n            this.setState({ showSuggestions: true });\n          }}\n        />\n        <ul\n          className='suggestions'\n          style={showSuggestions ? {} : { display: 'none' }}\n        >\n          {suggestions.map((suggestion) => (\n            <li\n              id={suggestion}\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li key='all' onClick={() => this.handleItemClicked('all')}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n        <InfoAlert text={infoText} />\n      </div>\n    );\n  }\n}\n\nCitySearch.propTypes = {\n  locations: PropTypes.array.isRequired,\n  updateEvents: PropTypes.func.isRequired,\n};\n\nexport default CitySearch;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nclass Event extends Component {\n  state = {\n    isExpanded: false, // Event is collapsed by default\n  };\n\n  // Toggle expand/collapse event on click\n  handleExpandEvent = () => {\n    if (this.state.isExpanded === false) {\n      this.setState({\n        isExpanded: true,\n      });\n    } else {\n      this.setState({\n        isExpanded: false,\n      });\n    }\n  };\n\n  // The elements displayed when event is expanded\n  renderExpandedComponent = () => {\n    const { event } = this.props;\n\n    if (this.state.isExpanded) {\n      return (\n        <div className='Expanded-Event'>\n          <h4>About event:</h4>\n          <div className='link-container'>\n            <a\n              className='link'\n              href={event.htmlLink}\n              rel='noreferrer'\n              target='_blank'\n            >\n              See details on Google Calendar\n            </a>\n          </div>\n          <p className='description'>{event.description}</p>\n        </div>\n      );\n    }\n  };\n\n  // Toggles button text\n  renderButtonText = () => {\n    return !this.state.isExpanded ? 'Show details' : 'Hide details';\n  };\n\n  // Reformats time data using moment.js\n  renderTime = () => {\n    const time = this.props.event.start.dateTime;\n    const formattedTime = moment(time, 'YYYY-MM-DD HH:mm').toDate();\n    return <span className='start-dateTime'>{`${formattedTime}`}</span>;\n  };\n\n  render() {\n    const { event } = this.props;\n\n    return (\n      <div className='Event'>\n        <div className='heading'>\n          <h2 className='summary'>{event.summary}</h2>\n          <div className='subheading'>\n            <div className='time'>{this.renderTime()}</div>\n            <div className='location-container'>\n              <span className='summary-2'>@{event.summary} | </span>\n              <span className='location'>{event.location}</span>\n            </div>\n          </div>\n        </div>\n        <div>{this.renderExpandedComponent()}</div>\n        <button\n          type='button'\n          className='btn-details'\n          onClick={this.handleExpandEvent}\n        >\n          {this.renderButtonText()}\n        </button>\n      </div>\n    );\n  }\n}\n\nEvent.propTypes = {\n  event: PropTypes.object.isRequired,\n};\n\nexport default Event;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Event from './Event';\n\nconst EventList = ({ events }) => {\n  return (!events) ? null : (\n      <ul className='EventList'>\n        {events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n  )\n}\n \nEventList.propTypes = {\n  events: PropTypes.array.isRequired,\n};\n\nexport default EventList;","import React from 'react';\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst DataVisualization = ({ data }) => {\n  return (\n    <div className='DataVisualization'>\n      <h4>Events in each city</h4>\n      <ResponsiveContainer height={400}>\n        <ScatterChart\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <CartesianGrid />\n          <XAxis type='category' dataKey='city' name='city' />\n          <YAxis\n            allowDecimals={false}\n            type='number'\n            dataKey='number'\n            name='number of events'\n          />\n          <Tooltip\n            className='Data-tooltip'\n            cursor={{ strokeDasharray: '3 3' }}\n          />\n          <Scatter data={data} fill='#8884d8' />\n        </ScatterChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default DataVisualization;\n","const mockData = [\n  {\n    kind: 'calendar#event',\n    etag: '\"3181161784712000\"',\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\n    status: 'confirmed',\n    htmlLink:\n      'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:17:46.000Z',\n    updated: '2020-05-27T12:01:32.356Z',\n    summary: 'Learn JavaScript',\n    description:\n      'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n    location: 'London, UK',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    start: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    end: {\n      dateTime: '2020-05-19T17:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\n    originalStartTime: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n  },\n  {\n    kind: 'calendar#event',\n    etag: '\"3181159875584000\"',\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\n    status: 'confirmed',\n    htmlLink:\n      'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:14:30.000Z',\n    updated: '2020-05-27T11:45:37.792Z',\n    summary: 'React is Fun',\n    description:\n      'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n    location: 'Berlin, Germany',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    start: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    end: {\n      dateTime: '2020-05-20T15:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\n    originalStartTime: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n  },\n];\n\nexport { mockData };\n","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\n// *===== Data Retrieval Functions *===== //\nconst getEvents = async () => {\n  NProgress.start();\n\n  // Return mockData for local user\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return { events: mockData, locations: extractLocations(mockData) };\n  }\n  // Returns previously cached data for offline user\n  if (!navigator.onLine) {\n    const events = localStorage.getItem('lastEvents');\n    NProgress.done();\n    return {\n      events: JSON.parse(events).events,\n      locations: extractLocations(JSON.parse(events).events),\n    };\n  }\n\n  // Calls API to retrieve events data\n  const token = await getAccessToken();\n  if (token) {\n    removeQuery();\n    const url =\n      'https://10b0ouiuy4.execute-api.us-east-1.amazonaws.com/dev/api/get-events' +\n      '/' +\n      token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n    NProgress.done();\n    return { events: result.data.events, locations };\n  }\n};\n\nconst extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\n// *===== Authentication & Authorization Functions =====* //\nconst getAccessToken = async () => {\n  // Looks for pre-existing token in storage & check validity\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  // If no token or invalid token, retrieve new token through google authorization\n  if (!accessToken || !tokenCheck) {\n    localStorage.removeItem('access_token'); // Remove invalid token\n\n    // Look for authorization code\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n\n    // If no auth code, redirect to Google Auth screen to sign in and retrieve code\n    if (!code) {\n      const results = await axios.get(\n        'https://10b0ouiuy4.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url'\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\n// Checks validity of access token\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result.error ? false : true;\n};\n\n// Gets new token from AWS Lamba if there is no token or invalid token\nconst getToken = async (code) => {\n  removeQuery();\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://10b0ouiuy4.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n};\n\n// Removes code from URL after it is used\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState('', '', newurl);\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host;\n    window.history.pushState('', '', newurl);\n  }\n};\n\nexport {\n  getEvents,\n  getAccessToken,\n  extractLocations,\n  removeQuery,\n  checkToken,\n  getToken,\n};\n","import React, { Component } from 'react';\nimport NumberOfEvents from './NumberOfEvents';\nimport CitySearch from './CitySearch';\nimport EventList from './EventList';\nimport DataVisualization from './DataVisualization';\nimport { WarningAlert, ErrorAlert } from './Alert';\nimport { getEvents } from './api';\nimport './styles/App.scss';\nimport './styles/nprogress.css';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    currentLocation: 'all',\n    numberOfEvents: '10',\n    warningText: '',\n    errorText: '',\n  };\n  // Note: numberOfEvents uses a string to prevent type conversion\n  async componentDidMount() {\n    this.mounted = true;\n    if (!navigator.onLine) {\n      this.setState({\n        errorText:\n          'You are currently using the app offline and viewing data from your last visit. Data will not be up-to-date.',\n      });\n    } else {\n      this.setState({ errorText: '' });\n    }\n    if (this.mounted) {\n      this.updateEvents();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  // Filters events based on location and number given in user input\n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberOfEvents } = this.state;\n\n    this.setState({ warningText: 'Please wait, events are loading...' });\n\n    // If user selects a location from input\n    if (location) {\n      getEvents().then((response) => {\n        // Applies new filter for location\n        const locationEvents =\n          location === 'all'\n            ? response.events\n            : response.events.filter((event) => event.location === location);\n        const events = locationEvents.slice(0, numberOfEvents);\n        return this.setState({\n          events: events,\n          currentLocation: location,\n          locations: response.locations,\n          warningText: '',\n        });\n      });\n    } else {\n      getEvents().then((response) => {\n        // Persists location filter from state\n        const locationEvents =\n          currentLocation === 'all'\n            ? response.events\n            : response.events.filter(\n                (event) => event.location === currentLocation\n              );\n        const numEvents = eventCount || numberOfEvents;\n        const events = locationEvents.slice(0, numEvents);\n        if (this.mounted) {\n          return this.setState({\n            events: events,\n            numberOfEvents: eventCount,\n            locations: response.locations,\n            warningText: '',\n          });\n        }\n      });\n    }\n  };\n\n  // Gets total number of events happening in each city\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location)\n        .length;\n      const city = location.split(' ').shift();\n      return { city, number };\n    });\n    return data;\n  };\n\n  render() {\n    const {\n      numberOfEvents,\n      events,\n      locations,\n      warningText,\n      errorText,\n    } = this.state;\n\n    return (\n      <div className='App'>\n        <h1>Meet App</h1>\n        <CitySearch locations={locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents\n          numberOfEvents={numberOfEvents}\n          updateEvents={this.updateEvents}\n        />\n        <ErrorAlert text={errorText} />\n        <WarningAlert text={warningText} />\n        <DataVisualization data={this.getData()} />\n        <EventList events={events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as atatus from 'atatus-spa';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\natatus.config('b206faf0f0394dfcac9e7e53568bc5e8').install();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}