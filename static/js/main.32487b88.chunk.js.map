{"version":3,"sources":["NumberOfEvents.js","CitySearch.js","Event.js","EventList.js","App.js","reportWebVitals.js","index.js"],"names":["NumberOfEvents","state","numEvents","handleInputChanged","event","value","target","setState","this","type","className","onChange","Component","CitySearch","query","suggestions","handleItemClicked","suggestion","props","locations","filter","location","toUpperCase","indexOf","map","onClick","Event","isExpanded","handleExpandEvent","renderExpandedComponent","htmlLink","description","summary","start","dateTime","timeZone","EventList","events","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OA8BeA,E,4MA3BbC,MAAQ,CACNC,UAAW,I,EAGbC,mBAAqB,SAACC,GACpB,IAAMC,EAAQD,EAAME,OAAOD,MAC3B,EAAKE,SAAS,CACZL,UAAWG,K,uDAIL,IACAH,EAAcM,KAAKP,MAAnBC,UAER,OACE,8BACE,uBACEO,KAAK,OACLC,UAAU,SACVL,MAAOH,EACPS,SAAUH,KAAKL,2B,GArBIS,aCoDdC,E,4MAnDbZ,MAAQ,CACNa,MAAO,GACPC,YAAa,I,EAGfC,kBAAoB,SAACC,GACnB,EAAKV,SAAS,CACZO,MAAOG,K,EAIXd,mBAAqB,SAACC,GACpB,IAAMC,EAAQD,EAAME,OAAOD,MACrBU,EAAc,EAAKG,MAAMC,UAAUC,QAAO,SAACC,GAC/C,OAAOA,EAASC,cAAcC,QAAQlB,EAAMiB,gBAAkB,KAEhE,EAAKf,SAAS,CACZO,MAAOT,EACPU,iB,uDAIM,IAAD,SACwBP,KAAKP,MAA5Ba,EADD,EACCA,MAAOC,EADR,EACQA,YAEf,OACE,sBAAKL,UAAU,aAAf,UACE,uBACED,KAAK,OACLC,UAAU,OACVL,MAAOS,EACPH,SAAUH,KAAKL,qBAEjB,qBAAIO,UAAU,cAAd,UACGK,EAAYS,KAAI,SAACP,GAAD,OACf,oBAEEQ,QAAS,kBAAM,EAAKT,kBAAkBC,IAFxC,SAIGA,GAHIA,MAMT,6BACE,gDADM,iB,GA3COL,aCoDVc,E,4MAnDbzB,MAAQ,CACN0B,YAAY,G,EAIdC,kBAAoB,YACY,IAA1B,EAAK3B,MAAM0B,WACb,EAAKpB,SAAS,CACZoB,YAAY,IAGd,EAAKpB,SAAS,CACZoB,YAAY,K,EAMlBE,wBAA0B,WAAO,IACvBzB,EAAU,EAAKc,MAAfd,MAER,GAAI,EAAKH,MAAM0B,WACb,OACE,sBAAKjB,UAAU,iBAAf,UACE,mBAAGA,UAAU,OAAb,SAAqBN,EAAM0B,WAC3B,mBAAGpB,UAAU,cAAb,SAA4BN,EAAM2B,kB,uDAMhC,IACA3B,EAAUI,KAAKU,MAAfd,MAER,OACE,sBAAKM,UAAU,QAAf,UACE,oBAAIA,UAAU,UAAd,SAAyBN,EAAM4B,UAC/B,qBAAKtB,UAAU,iBAAf,SAAiCN,EAAM6B,MAAMC,WAC7C,qBAAKxB,UAAU,iBAAf,SAAiCN,EAAM6B,MAAME,WAC7C,qBAAKzB,UAAU,WAAf,SAA2BN,EAAMiB,WACjC,wBACEZ,KAAK,SACLC,UAAU,cACVe,QAASjB,KAAKoB,oBAEfpB,KAAKqB,iC,GA9CMjB,aCgBLwB,E,uKAdH,IACAC,EAAW7B,KAAKU,MAAhBmB,OACR,OACE,oBAAI3B,UAAU,YAAd,SACG2B,EAAOb,KAAI,SAACpB,GAAD,OACV,6BACE,cAAC,EAAD,CAAOA,MAAOA,KADPA,EAAMkC,a,GAND1B,aCeT2B,G,6KAVX,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GANUE,cCMH4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.32487b88.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numEvents: 32,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({\n      numEvents: value,\n    });\n  };\n\n  render() {\n    const { numEvents } = this.state;\n\n    return (\n      <div>\n        <input\n          type='text'\n          className='number'\n          value={numEvents}\n          onChange={this.handleInputChanged}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n    });\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  render() {\n    const { query, suggestions } = this.state;\n\n    return (\n      <div className='CitySearch'>\n        <input\n          type='text'\n          className='city'\n          value={query}\n          onChange={this.handleInputChanged}\n        />\n        <ul className='suggestions'>\n          {suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li key='all'>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    isExpanded: false, // Event is collapsed by default\n  };\n\n  // Toggle expand/collapse event on click\n  handleExpandEvent = () => {\n    if (this.state.isExpanded === false) {\n      this.setState({\n        isExpanded: true,\n      });\n    } else {\n      this.setState({\n        isExpanded: false,\n      });\n    }\n  };\n\n  // The elements displayed when event is expanded\n  renderExpandedComponent = () => {\n    const { event } = this.props;\n\n    if (this.state.isExpanded) {\n      return (\n        <div className='Expanded-Event'>\n          <a className='link'>{event.htmlLink}</a>\n          <p className='description'>{event.description}</p>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    const { event } = this.props;\n\n    return (\n      <div className='Event'>\n        <h2 className='summary'>{event.summary}</h2>\n        <div className='start-dateTime'>{event.start.dateTime}</div>\n        <div className='start-timeZone'>{event.start.timeZone}</div>\n        <div className='location'>{event.location}</div>\n        <button\n          type='button'\n          className='btn-details'\n          onClick={this.handleExpandEvent}\n        ></button>\n        {this.renderExpandedComponent()}\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className='EventList'>\n        {events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","import React, { Component } from 'react';\nimport NumberOfEvents from './NumberOfEvents';\nimport CitySearch from './CitySearch';\nimport EventList from './EventList';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <CitySearch />\n        <NumberOfEvents />\n        <EventList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}